pipeline {
  agent any

  tools {
    nodejs '20'
  }

  parameters {
    string(name: 'REPO_URL', defaultValue: 'https://github.com/ElQuenta/Jenkins-Vercel.git', description: 'URL del repo. Si vac√≠o se usa checkout scm (multibranch).')
    string(name: 'BRANCH', defaultValue: 'main', description: 'Branch a clonar')
    string(name: 'FOLDER', defaultValue: './html_page', description: 'Carpeta relativa dentro del repo a desplegar (p.ej. build o dist)')
  }

  environment {
    NODE_ENV = 'production'
    VERCEL_TOKEN = credentials('vercel-token')
    VERCEL_ORG = 'test'
    VERCEL_PROJECT = 'test-project'
  }

  stages {
    stage('Checkout') {
      steps {
        script {
          if (params.REPO_URL?.trim()) {
            git url: params.REPO_URL, branch: params.BRANCH
          } else {
            checkout scm
          }
        }
      }
    }

    stage('Install Vercel CLI (si es necesario)') {
      steps {
        sh '''
          echo "Instalando Vercel CLI globalmente..."
          npm install -g vercel@latest
        '''
      }
    }

    stage('Deploy to Vercel') {
      steps {
        script {
          def orgFlag = env.VERCEL_ORG?.trim() ? "--scope ${env.VERCEL_ORG.trim()}" : ''
          def projectFlag = env.VERCEL_PROJECT?.trim() ? "--project ${env.VERCEL_PROJECT.trim()}" : ''
          dir(params.FOLDER) {
            sh "npx vercel --prod --token \\$VERCEL_TOKEN --confirm ${orgFlag} ${projectFlag}"
          }
        }
      }
    }
  }

  post {
    success { echo 'Despliegue en Vercel completado.' }
    failure { echo 'Error en el despliegue. Revisar logs.' }
  }
}